{"version":3,"sources":["classes.js","NavBar.js","Image.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["id","title","instructor","description","duration","featureImage","classType","NavBar","createClass","toggleIsHelpOpen","Header","HeaderMenu","HeaderItem","onClick","displayName","styled","header","div","Image","editable","setFeatureImage","useState","isSearchOpen","setIsSearchOpen","searchTerm","setSearchTerm","activePage","setActivePage","images","setImages","itemsCountTotal","setItemsCountTotal","fetchImages","useCallback","term","page","random","Math","floor","queryString","fetch","then","res","json","data","total_pages","results","catch","err","console","log","useEffect","toggleSearchModal","e","preventDefault","className","drawEditImageButton","ResponsiveImage","backgroundURL","height","SearchModal","isOpen","onBackgroundClick","onEscapeKeydown","onSubmit","type","name","value","onChange","target","map","img","key","urls","thumb","regular","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","subContainerClassName","activeClassName","ceil","props","Modal","Card","content","deleteCard","setTitle","setInstructor","setDescription","setDuration","setClassType","isFlipped","setIsFlipped","handleChangeClassType","CardWrapper","flipDirection","CardDisplay","CardForm","rows","checked","App","classList","cards","setCards","isHelpOpen","setIsHelpOpen","window","confirm","index","findIndex","item","splice","newCards","reverse","Wrapper","lastItem","slice","pop","lastId","backgroundComponent","SpecialModalBackground","CardContainer","StyledModal","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06d7fdb8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: \"Cooking Pasta with Giada De Laurentiis\",\n    instructor: \"Giada De Laurentiis\",\n    description: \"Learn to cook this great pasta from your fave chef\",\n    duration: 25,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2013/10/7/0/FNK_Pasta-Ponza_s4x3.jpg.rend.hgtvcom.616.462.suffix/1383814646967.jpeg',\n    classType: 'on-demand'\n  },\n  {\n    id: 2,\n    title: \"Cooking Lasagne with Giada\",\n    instructor: \"Giada De Laurentiis\",\n    description: \"Learn to cook the best meal on the planet with a legendary Food Network Star\",\n    duration: 45,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2008/1/31/0/italiancooking_lasagna.jpg.rend.hgtvcom.826.620.suffix/1382982573090.jpeg',\n    classType: 'on-demand'\n  },\n  {\n    id: 3,\n    title: \"Grilling Burgers with Bobby\",\n    instructor: \"Bobby Flay\",\n    description: \"Grille burgers with this professional grillmaster, Bobby Flay. You won't regret it!\",\n    duration: 35,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2009/4/15/0/FNM060109BobbysBurgers004_burger_s4x3.jpg.rend.hgtvcom.826.620.suffix/1382538951232.jpeg',\n    classType: 'on-demand'\n  },\n  {\n    id: 4,\n    title: \"Comfort Foods with Ree\",\n    description: \"Can't go wrong with Ree\",\n    instructor: \"Ree Drummond\",\n    duration: 35,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2014/8/19/0/WU0809_Twice-Baked-Potato-Casserole_s4x3.jpg.rend.hgtvcom.966.773.suffix/1429279262392.jpeg',\n    classType: 'live'\n  }\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst NavBar = ({createClass, toggleIsHelpOpen}) => {\n  return (\n    <Header>\n      <HeaderMenu>\n        <HeaderItem>\n          ReactJS â€“ Interactive Cards\n          <button onClick={createClass}>+</button>\n          <button onClick={toggleIsHelpOpen}>?</button>\n        </HeaderItem>\n      </HeaderMenu>\n    </Header>\n  )\n}\nexport default NavBar\n\nNavBar.displayName = 'NavBar'\n\nconst Header = styled.header`\n  background-color: #f9f9f9;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  padding: 10px 0 15px;\n  box-shadow: 0 0 5px 0 gray;\n`\nconst HeaderMenu = styled.div`\n  margin-top: 0px;\n  height: 100%;\n`\nconst HeaderItem = styled.div`\n  padding: 0 10px 0 10px;\n  text-align: center;\n  box-sizing: border-box;\n  list-style-type: none;\n`\n","import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'styled-react-modal';\nimport ReactPaginate from 'react-paginate';\n\nconst Image = ({editable=false, featureImage, setFeatureImage}) => {\n    const [isSearchOpen, setIsSearchOpen] = useState(false)\n    const [searchTerm, setSearchTerm] = useState('')\n    const [activePage, setActivePage] = useState(0)\n    const itemsCountPerPage = 16\n    const [images, setImages] = useState([])\n    const [itemsCountTotal, setItemsCountTotal] = useState(0)\n    const fetchImages = useCallback(\n      () => {\n        let page = activePage + 1\n        let term\n        if(!searchTerm) {\n          const terms = ['purple', 'red', 'orange', 'teal','green', 'gold', 'blue', 'pink','grey', 'black']\n          let random = Math.floor((Math.random() * 10) + 1);\n          term = terms[random]\n          setSearchTerm(term)\n        } else {\n          term = searchTerm\n        }\n        const client_id = 'cf5f09425d6ea12bc9825551cc6c10d5e344e857f61fe94c620dfd6e8a5aba9f'\n        const queryString = `client_id=${client_id}&query=${term}&page=${page}&per_page=${itemsCountPerPage}`\n    \n        fetch(`https://api.unsplash.com/search/photos?${queryString}`)\n        .then(res => res.json())\n        .then(data => {\n          setItemsCountTotal(data.total_pages)\n          setImages(data.results)\n        }).catch(err => {\n          console.log('Error happened during fetching!', err)\n        })\n      },\n      [searchTerm, itemsCountPerPage, activePage],\n    );\n    useEffect(() => { if(isSearchOpen) fetchImages()}, [isSearchOpen,fetchImages,itemsCountPerPage, activePage])\n\n    const toggleSearchModal = (e) => {\n      e.preventDefault()\n      setIsSearchOpen(!isSearchOpen)\n    }\n    const handleSearchTermChange = (e) => { \n      \n      const value = e.target.value\n      setSearchTerm(value) \n    }\n\n    const handleActivePageChange = (data) => {\n      const value = data.selected\n      setActivePage(value)\n    }\n    const handleFormSubmit = (e) => {\n      e.preventDefault();\n      setActivePage(0)\n      fetchImages()\n    }\n    const drawEditImageButton = (editable) => {\n      if(editable==='true') {\n        return (\n          <button onClick={toggleSearchModal}>Choose Image</button>\n        )\n      }\n    }\n\n    return (\n      <div className=\"container__changeImage\">\n        \n        {/* Conditionally draws edit image button if editable is true. */}\n        {drawEditImageButton(editable)}\n        \n        {/* Styled Component to draw an image. */}\n        <ResponsiveImage backgroundURL={featureImage} height=\"200px\"></ResponsiveImage>\n\n        {/* Styled React Modal Component to contain search API UI */}\n        <SearchModal\n          isOpen={isSearchOpen}\n          onBackgroundClick={toggleSearchModal}\n          onEscapeKeydown={toggleSearchModal}>\n          \n          {/* Close Modal button */}\n          <div className=\"container__changeImage_close\">\n            <button onClick={toggleSearchModal}>X</button>\n          </div>\n          {/* Search Images fields */}\n          <div className=\"container__changeImage_search\">\n            <h2>Image Library</h2>\n            <form onSubmit={handleFormSubmit}>\n              <label>Keyword(s)<br />\n                <input\n                  type=\"text\"\n                  name=\"searchTerm\"\n                  value={searchTerm}\n                  onChange={handleSearchTermChange}\n                />\n              </label>\n\n              <button type=\"submit\">Search</button>\n            </form>\n          </div>\n\n          {/* Image API search results. */}\n          <div className=\"container__changeImage_images\">\n              {\n                images.map(img => <ResponsiveImage  height=\"100px\"\n                  key={img.id} \n                  backgroundURL={img.urls.thumb} \n                  className='container__changeImage_image' \n                  onClick={(e) => {\n                    setFeatureImage(img.urls.regular) \n                    toggleSearchModal(e) \n                  }\n                }></ResponsiveImage>)\n              }\n          </div>\n          \n          {/* Pagination for image API search results. */}\n          <div className=\"container__changeImage_pagination\">\n            <ReactPaginate\n              previousLabel={'<<'}\n              nextLabel={'>>'}\n              breakLabel={'...'}\n              breakClassName={'break-me'}\n              pageCount={itemsCountTotal/itemsCountPerPage}\n              marginPagesDisplayed={1}\n              pageRangeDisplayed={3}\n              onPageChange={handleActivePageChange}\n              containerClassName={'pagination'}\n              subContainerClassName={'pages pagination'}\n              activeClassName={'active'}\n            />\n            {itemsCountTotal} Images found.<br />\n            Page {activePage+1} of {Math.ceil(itemsCountTotal/itemsCountPerPage)}\n          </div>\n        </SearchModal>\n      </div>\n    )\n}\n  \nexport default Image\n\nconst ResponsiveImage = styled.div`\n  background-image: url(${props => props.backgroundURL});\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  width: 100%;\n  height: ${props => props.height};\n`\nconst SearchModal = Modal.styled`\n  position:absolute;\n  background-color: #111111; \n  color: #ffffff;\n  z-index: 40;\n  width: 100vw;\n  height: 100vh;\n  max-height: 1400px;\n  \n\n  button {\n    background: transparent;\n    background-color: #0a0a0a; \n    border-radius: 2px;\n    border: 1px solid #2f2f2f;\n    display: inline-block;\n    cursor: pointer;\n    color: #ffffff;\n    font-family: \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    font-size: .75em;\n    font-weight: bold;\n    padding: 4px 18px;\n    margin: 0 5px;\n    text-decoration: none;\n  }\n  button:hover {\n    background: linear-gradient(to bottom, #111111 5%, #000000 100%);\n    background-color: #333333;\n  }\n  button:active {\n    position: relative;\n    top: 1px;\n  }\n\n\n  & .container__changeImage_close {\n    position: absolute;\n    top: 8px;\n    right: 3px;\n    padding: 4px 8px;\n  }\n\n  & .container__changeImage_search  {   \n    margin: 0;\n    text-align: left;\n    \n    h2 {    \n      display: block;\n      font-size: 1.25em;\n      font-weight: 200;\n      text-align: left;\n      margin: 10px; \n    }\n    form {\n      background-color: #1f1f1f;\n      padding: 10px  \n      // box-shadow: 3px 3px 2px 3px rgba(0,0,0,.5);\n    }\n    label {\n      display: inline-block;\n      font-size: .75em;\n      font-weight: 200;\n      text-align: left;\n      padding: 5px;\n      margin: 0;\n    }\n    input {  \n      display: inline-block;\n      background-color: #2f2f2f;  \n      color: #ffffff;\n      font-size: 1em;\n      border: 0;\n      border-radius: 5px;\n      padding: 5px;\n      margin: 2px 0 0 0;\n    }\n    select {    \n      background-color: #2f2f2f;  \n      color: #ffffff;\n      font-size: 1em;\n      border: 0;\n      padding: 4px;\n      margin: 2px 0 0 0;\n    }\n  }\n\n\n  & .container__changeImage_images {\n    display: grid;       grid-template-columns: 25% 25% 25% 25%;\n\n    min-height: 480px;\n    max-height: 480px;\n    overflow: scroll;\n  }\n\n  & .container__changeImage_image {\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n    width: 100%;\n    min-height: 120px;\n    cursor: pointer;\n  }\n  & .container__changeImage_pagination {\n    position: relative;\n    font-size: .75em;\n    margin: 0 auto;\n    width: 100%;\n  }\n\n  & .pagination {\n    margin: 15px margin;\n    padding: 0;\n  }\n  & .pagination ul {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n  }\n\n  & .pagination li {\n    display: inline-block;\n    background-color: #111111;\n    color: #ffffff;\n    font-weight: 500;\n    border: 1px solid #2f2f2f;\n    border-radius: 3px;\n    padding: 3px 5px;\n    margin: 3px;\n    cursor: pointer;\n  }\n\n  @media (min-width: 415px)  {\n\n    width: 100vw;\n    height: 100vh;\n\n    & .container__changeImage_images {\n      grid-template-columns: 25% 25% 25% 25%;\n      height: 100%;\n      max-height: 480px;\n    }\n  }\n  @media (min-width: 768px)  {\n\n    width: 90vw;\n    height: 90vh;\n    box-shadow: 3px 3px 12px 0px rgba(0,0,0,.25);\n  \n    \n    & .container__changeImage_images {\n      height: 100%;\n      max-height: 480px;\n    }\n  }\n\n  @media (min-width: 1200px)  {\n\n    width: 70vw;\n    height: 90vh;\n    box-shadow: 3px 3px 12px 0px rgba(0,0,0,.25);\n  \n    \n    & .container__changeImage_images {\n      height: 100%;\n      max-height: 480px;\n    }\n  }\n`","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Image from './Image';\nimport ReactCardFlip from 'react-card-flip';\n\nconst Card = ({content,deleteCard}) => {\n    const [featureImage, setFeatureImage] = useState(content.featureImage)\n    const [title, setTitle] = useState(content.title)\n    const [instructor, setInstructor] = useState(content.instructor)\n    const [description, setDescription] = useState(content.description)\n    const [duration, setDuration] = useState(content.duration)\n    const [classType, setClassType] = useState(content.classType)\n    const [isFlipped, setIsFlipped] = useState(false)\n  \n    const toggleFlip = (e) => {\n      setIsFlipped(!isFlipped)\n    }\n\n    const handleChangeTitle = (e) => { \n      const value = e.target.value\n      setTitle(value)\n    }\n\n    const handleChangeInstructor = (e) => { \n      const value = e.target.value\n      setInstructor(value)\n    }\n\n    const handleChangeDescription = (e) => { \n      const value = e.target.value\n      setDescription(value)\n    }\n\n    const handleChangeDuration = (e) => { \n      const value = e.target.value\n      setDuration(value)\n    }\n    \n    const handleChangeClassType = (e) => { \n      const value = e.target.value\n      setClassType(value)\n    }\n\n    const handleFormSubmit = (e) => {\n      setTitle(title)\n      setInstructor(instructor)\n      setDescription(description)\n      setDuration(duration)\n      setClassType(classType)\n      setIsFlipped(false)\n      e.preventDefault();\n    }\n  \n    return (\n      <CardWrapper>\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n          \n          <CardDisplay key=\"front\" onClick={toggleFlip}>\n            <Image editable='false' featureImage={featureImage} setFeatureImage={setFeatureImage} />\n            <div className=\"classInfo\">\n              <h2>{title}</h2>\n              <h3>{instructor}</h3>\n              <p className=\"classDescription\">{description}</p>\n            </div>\n            <div>\n              <span className={classType === 'live' ? 'classType live' : 'classType onDemand'}>{classType}</span>\n              <span className=\"classDuration\">{duration} min</span>\n            </div>\n          </CardDisplay>\n  \n          <CardForm key=\"back\">\n            <Image editable='true' featureImage={featureImage} setFeatureImage={setFeatureImage} />\n            <label>Title: </label>\n            <input \n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={handleChangeTitle}\n              />\n            <br />\n            <label>Instructor:</label>\n            <input\n              type=\"text\"\n              name=\"instructor\"\n              value={instructor}\n              onChange={handleChangeInstructor}\n              />\n            <br />\n            <label>Description:</label>\n            <textarea\n              rows=\"6\"\n              name=\"description\"\n              value={description}\n              onChange={handleChangeDescription}\n            />\n            <br />\n            <label className=\"form__radioLabelOnDemand\">On-Demand: \n              <input\n                type=\"radio\"\n                value=\"on-demand\"\n                onChange={handleChangeClassType}\n                checked={classType === 'on-demand'}\n              />\n            </label>\n            <label className=\"form__radioLabelLive\">Live: \n              <input\n                type=\"radio\"\n                value=\"live\"\n                onChange={handleChangeClassType}\n                checked={classType === 'live'}\n              />\n            </label>\n            <label className=\"form__inputLabelDuration\">Duration:\n              <input\n                type=\"number\"\n                name=\"duration\"\n                value={duration}\n                onChange={handleChangeDuration}\n              />\n            </label>\n            <div className=\"form__buttons\">\n              <button onClick={handleFormSubmit}>Save</button>\n              <button onClick={(e) => deleteCard(e, content.id)}>Delete</button>\n            </div>\n          </CardForm>\n        </ReactCardFlip>\n      </CardWrapper>\n    )\n}\n  \nexport default Card\n\nconst CardWrapper = styled.div`\n  width: 350px;\n  margin: 5px 5px;\n`\nconst CardDisplay = styled.div`\n  min-height: 470px;\n  background-color: #111111;\n  border: solid 1px #cccccc;\n  cursor: pointer;\n  box-shadow: 3px 3px 3px 0px rgba(0,0,0,.05);\n\n  & h2 {\n    display: inline-block;\n    width: 100%;\n    font-weight: 600;\n    font-size: 1.5em;\n    font-weight: 700;\n    padding: 10px 0;\n    margin-top: -50px;\n    background-color: #ffffff;\n  }\n  & h3 {\n    font-weight: 500;\n    font-size: 1.125em;\n    padding: 0px 10px;\n    margin-top: 0px;\n  }\n  & .classInfo {\n    max-width: 85%;\n    margin: 0 auto 20px;\n    background-color: #ffffff;\n  }\n  & .classDescription {\n    font-weight: 400;\n    font-size: .75em;\n    padding: 0 20px;\n    height: 120px;\n    overflow: hidden;\n  }\n  & .classType {\n    float: left;\n    font-weight: 700;\n    text-transform: uppercase;\n    color: #ffffff;\n    padding: 2px 10px;\n  }\n  & .classType.live {\n    background-color: #236d14;\n  }\n  & .classType.onDemand {\n    background-color: #ffffff;\n    border-left: 0px;\n    color: #000000;\n  }\n  & .classDuration {\n    width: 30px;\n    height: 27px;\n    float: right;\n    border-radius: 32px;\n    color: #ffffff;\n    font-weight: 500;\n    font-size: .75em;\n    line-height: 1;\n    margin: 0 5px 0 0;\n  }    \n`\nconst CardForm = styled.div`\n  min-height: 470px;  \n  background-color: #ffffff;\n  border: solid 1px #cccccc;\n  cursor: pointer;\n  box-shadow: 3px 3px 3px 0px rgba(0,0,0,.05);\n\n  & .container__changeImage button {\n    position: fixed;\n    width: 150px;\n    top: 150px;\n    left: 50%;\n    margin-left: -75px;\n  }\n\n  & label {\n    display: inline-block;\n    vertical-align: top;\n    padding: 5px;\n    margin: 2px;\n    font-weight: 500;\n    font-size: .8em;\n    text-align: right;\n    width: 75px;\n  }\n  & textarea  {\n    width: 180px;\n    font-size: .85em;\n    border: 1px solid #dddddd;\n    background-color: #fafafa;\n    padding: 3px;\n    margin: 2px;\n  }\n  & input  {\n    width: 180px;\n    font-size: .85em;\n    border: 1px solid #dddddd;\n    background-color: #fafafa;\n    padding: 3px;\n    margin: 2px;\n  } \n  & input[type=\"radio\"]  {\n    display: inline-block;\n    width: 30px;\n    border: 1px solid #cccccc;\n  }\n  & label.form__radioLabelOnDemand {\n    padding: 0;\n    width: 115px;\n  }\n  & label.form__radioLabelLive {\n    padding: 0;\n    width: 65px;\n  }\n  & label.form__inputLabelDuration{\n    padding: 0;\n    width: 100px;\n    & input {\n      margin: 0px;\n      width: 35px;\n    }\n  }\n  & .form__buttons {\n    padding: 15px 0 10px;\n  }\n`","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ModalProvider } from 'styled-react-modal';\nimport classList from './classes';\nimport NavBar from './NavBar';\nimport Card from './Card';\nimport Modal from 'styled-react-modal';\n\nconst App = () => {\n    const [cards, setCards] = useState(classList)\n    const [isHelpOpen, setIsHelpOpen] = useState(false)\n    \n    const toggleIsHelpOpen = () => {\n      setIsHelpOpen(!isHelpOpen)\n    }\n\n    const createClass = () => {\n      const lastItem = cards.reverse().slice(-1).pop();\n      const lastId = lastItem ? lastItem.id + 1 : 1;\n     \n      const newCards = [...cards, {\n        id: lastId,\n        title: \"New Class\",\n        instructor: \"Click on a card to edit it.\",\n        description: \"Add a title, instructor, and description. Choose a picture. Indicate whether the class is Live or On-Demand and the class duration.\",\n        duration: \"0\",\n        featureImage: \"https://via.placeholder.com/500/000000/ffffff/?text=Choose+a+Picture\",\n        classType: \"Type\"\n      }]\n      setCards(newCards)\n    }\n\n    const deleteCard = (e, id) => {\n      if (window.confirm('Are you sure you want to do this?\\nOK to delete or Cancel to go back.')) {\n        let index = cards.findIndex(item => item.id === id)\n        cards.splice(index, 1)\n        let newCards = [...cards.reverse()]\n        setCards(newCards)\n      } \n      e.preventDefault();\n    }\n\n    return (\n      <Wrapper>\n        <NavBar createClass={createClass} toggleIsHelpOpen={toggleIsHelpOpen} />\n        \n        <ModalProvider backgroundComponent={SpecialModalBackground}>\n          \n          <CardContainer>\n            {cards.reverse().map(item => <Card key={item.id} content={item} deleteCard={deleteCard} />)}\n          </CardContainer>\n\n          <StyledModal\n            isOpen={isHelpOpen}\n            onBackgroundClick={toggleIsHelpOpen}\n            onEscapeKeydown={toggleIsHelpOpen}>\n            <button className=\"container__help_close\" onClick={toggleIsHelpOpen}>Close</button>\n            <div className=\"container__help_body\">\n              <h2>Help</h2>\n              <p>To Create: Click on the \"+\" button.</p>\n              <p>To Update: Click on any card to edit it's content.</p>\n              <p>To Delete: Click on a card and then click the Delete button and confirm.</p>\n            </div>\n          </StyledModal>\n\n        </ModalProvider>\n\n      </Wrapper>\n    )\n}\n\nexport default App\n\n\nconst Wrapper = styled.div `\n  padding: 45px 0 0 0;\n  text-align: center;\n`\nconst CardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: top;\n  justify-content: center;\n  margin: 20px;\n`\nconst SpecialModalBackground = styled.div`\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 30;\n  background-color: rgba(0,0,0,.5);\n`\nconst StyledModal = Modal.styled`\n  position:absolute;\n  width: 90%;\n  height: auto;\n  max-width: 960px;\n  max-height: 800px;\n  background-color: #333333;\n  color: #ffffff;\n  border-radius: 8px;\n  z-index: 40;\n  box-shadow: 3px 3px 12px 0px rgba(0,0,0,.25);\n  overflow: auto;\n\n  @media (max-width: 414px)  {\n    width: 100vw;\n    height: 100vh;\n    max-height: 1400px;\n    border-radius: 0px !important;\n  }\n  & .container__help_close {\n    position: absolute;\n    top: 15px;\n    right: 13px;\n    padding: 5px 10px;\n  }\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://create-react-app.dev/docs/making-a-progressive-web-app/\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.unregister();\n"],"sourceRoot":""}