{"version":3,"sources":["classes.js","NavBar.js","Image.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["id","title","instructor","description","duration","featureImage","classType","NavBar","props","Header","HeaderMenu","HeaderItem","displayName","styled","header","div","Image","editImage","setFeatureImage","useState","images","setImages","isOpen","setIsOpen","search","setSearch","toggleModal","e","preventDefault","className","edit","onClick","launchModalButton","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","width","height","marginBottom","StyledModal","onBackgroundClick","onEscapeKeydown","type","name","value","onChange","target","fetch","then","res","json","data","results","console","log","catch","err","map","img","key","urls","thumb","cursor","regular","Modal","Card","content","deleteClass","setTitle","setInstructor","setDescription","setDuration","setClassType","isFlipped","setIsFlipped","handleChangeClassType","ClassCardWrapper","flipDirection","ClassCardDisplay","ClassCardForm","rows","checked","App","classList","classes","setClasses","window","confirm","index","findIndex","klass","splice","newClasses","reverse","Wrapper","lastId","slice","pop","backgroundComponent","SpecialModalBackground","CardContainer","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29791352.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: \"Cooking Pasta with Giada De Laurentiis\",\n    instructor: \"Giada De Laurentiis\",\n    description: \"Learn to cook this great pasta from your fave chef\",\n    duration: 25,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2013/10/7/0/FNK_Pasta-Ponza_s4x3.jpg.rend.hgtvcom.616.462.suffix/1383814646967.jpeg',\n    classType: 'on-demand'\n  },\n  {\n    id: 2,\n    title: \"Cooking Lasagne with Giada\",\n    instructor: \"Giada De Laurentiis\",\n    description: \"Learn to cook the best meal on the planet with a legendary Food Network Star\",\n    duration: 45,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2008/1/31/0/italiancooking_lasagna.jpg.rend.hgtvcom.826.620.suffix/1382982573090.jpeg',\n    classType: 'on-demand'\n  },\n  {\n    id: 3,\n    title: \"Grilling Burgers with Bobby\",\n    instructor: \"Bobby Flay\",\n    description: \"Grille burgers with this professional grillmaster, Bobby Flay. You won't regret it!\",\n    duration: 35,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2009/4/15/0/FNM060109BobbysBurgers004_burger_s4x3.jpg.rend.hgtvcom.826.620.suffix/1382538951232.jpeg',\n    classType: 'on-demand'\n  },\n  {\n    id: 4,\n    title: \"Comfort Foods with Ree\",\n    description: \"Can't go wrong with Ree\",\n    instructor: \"Ree Drummond\",\n    duration: 35,\n    featureImage: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2014/8/19/0/WU0809_Twice-Baked-Potato-Casserole_s4x3.jpg.rend.hgtvcom.966.773.suffix/1429279262392.jpeg',\n    classType: 'live'\n  }\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst NavBar = props => {\n  return (\n    <Header>\n      <HeaderMenu>\n        <HeaderItem>\n          ReactJS â€“ Demo\n        </HeaderItem>\n      </HeaderMenu>\n    </Header>\n  )\n}\nexport default NavBar\n\nNavBar.displayName = 'NavBar'\n\nconst Header = styled.header`\n  background-color: #00c4ff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 25px;\n  box-shadow: 0 0 5px 0 gray;\n`\nconst HeaderMenu = styled.div`\n  margin-top: 0px;\n  height: 100%;\n  align-items: center;\n  justify-content: space-between;\n  display: flex;\n`\nconst HeaderItem = styled.div`\n  padding: 0 10px 0 10px;\n  text-align: center;\n  box-sizing: border-box;\n  list-style-type: none;\n`\n","import React, { useState } from 'react';\nimport Modal from 'styled-react-modal';\n\nconst Image = ({editImage, featureImage, setFeatureImage}) => {\n    const [images, setImages] = useState([])\n    const [isOpen, setIsOpen] = useState(false)\n    const [search, setSearch] = useState('')\n    \n    const handleSearch = (e) => { \n      const value = e.target.value\n      setSearch(value)\n    }\n\n    const toggleModal = (e) => {\n      setIsOpen(!isOpen)\n      e.preventDefault();\n    }\n\n    const fetchImages = (e) => {\n      e.preventDefault();\n      fetch('https://api.unsplash.com/search/photos?page=1&query='+ search +'&client_id=cf5f09425d6ea12bc9825551cc6c10d5e344e857f61fe94c620dfd6e8a5aba9f&per_page=16')\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.results)\n        console.log(data) \n      }).catch(err => {\n        console.log('Error happened during fetching!', err);\n      });\n      console.log(images)\n    }\n\n    const launchModalButton = (edit) => {\n      if(edit==='true') {\n        return (\n          <button onClick={toggleModal}>Change Picture</button>\n        )\n      }\n    }\n\n    return (\n      <div>\n        \n        <div className=\"container__changeImage\">\n          {launchModalButton(editImage)}\n          <div style={{ backgroundImage: 'url(' + featureImage + ')', \n              backgroundSize: 'cover', \n              backgroundPosition: 'center center',\n              backgroundRepeat: 'no-repeat',\n              width: '100%',\n              height: '200px',\n              marginBottom: '10px'\n            }}></div>\n        </div>\n\n        <StyledModal\n          isOpen={isOpen}\n          onBackgroundClick={toggleModal}\n          onEscapeKeydown={toggleModal}>\n          <button className=\"container__changeImage_close\" onClick={toggleModal}>X</button>\n          \n          <div className=\"container__changeImage_search\">\n            <h2>Find a Picture</h2>\n            <form>\n            <input\n              type=\"text\"\n              name=\"search\"\n              value={search}\n              onChange={handleSearch}\n            />\n            <button onClick={fetchImages}>Search</button>\n            </form>\n          </div>\n          <div className=\"container__changeImage_images\">\n            <div className=\"container__changeImage_flex\">\n              {\n                images.map(img => <div key={img.id} style={{ backgroundImage: 'url(' + img.urls.thumb + ')', \n                  backgroundSize: 'cover', \n                  backgroundPosition: 'center center',\n                  backgroundRepeat: 'no-repeat',\n                  width: '140px',\n                  height: '100px',\n                  cursor: 'pointer'\n                  }} onClick={(e) => {\n                    setFeatureImage(img.urls.regular) \n                    toggleModal(e) \n                  }\n                }></div>)\n              }\n            </div>\n          </div>\n        </StyledModal>\n\n      </div>\n    )\n}\n  \nexport default Image\n\n\nconst StyledModal = Modal.styled`\n  position:absolute;\n  width: 90%;\n  height: 90%;\n  max-width: 960px;\n  max-height: 800px;\n  background-color: #d1d1d1;\n  border-radius: 16px;\n  z-index: 40;\n  box-shadow: 3px 3px 3px 0px rgba(0,0,0,.5);\n\n  & .container__changeImage_close {\n    position: absolute;\n    top: 15px;\n    right: 13px;\n    width: 30px;\n    padding: 5px;\n  }\n  & .container__changeImage_images {\n    margin: 50px 10px 0;\n  }\n  & .container__changeImage_flex {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  & .container__changeImage_images img{\n    max-height: 90px;\n    cursor: pointer;\n    margin: 2px;\n  }\n  & .container__changeImage_search {    \n    width: 90%;\n    margin: 0 auto;\n  }\n  & .container__changeImage_search input {    \n    font-size: 1.125em;\n    padding: 3px;\n    margin: 0 5px;\n  }\n`","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Image from './Image';\nimport ReactCardFlip from 'react-card-flip';\n\nconst Card = ({content,deleteClass}) => {\n    const [featureImage, setFeatureImage] = useState(content.featureImage)\n    const [title, setTitle] = useState(content.title)\n    const [instructor, setInstructor] = useState(content.instructor)\n    const [description, setDescription] = useState(content.description)\n    const [duration, setDuration] = useState(content.duration)\n    const [classType, setClassType] = useState(content.classType)\n    const [isFlipped, setIsFlipped] = useState(false)\n  \n    const toggleFlip = (e) => {\n      setIsFlipped(!isFlipped)\n    }\n\n    const handleChangeTitle = (e) => { \n      const value = e.target.value\n      setTitle(value)\n    }\n\n    const handleChangeInstructor = (e) => { \n      const value = e.target.value\n      setInstructor(value)\n    }\n\n    const handleChangeDescription = (e) => { \n      const value = e.target.value\n      setDescription(value)\n    }\n\n    const handleChangeDuration = (e) => { \n      const value = e.target.value\n      setDuration(value)\n    }\n    \n    const handleChangeClassType = (e) => { \n      const value = e.target.value\n      setClassType(value)\n    }\n\n    const handleFormSubmit = (e) => {\n      setTitle(title)\n      setInstructor(instructor)\n      setDescription(description)\n      setDuration(duration)\n      setClassType(classType)\n      setIsFlipped(false)\n      e.preventDefault();\n    }\n  \n    return (\n      <ClassCardWrapper>\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n          <ClassCardDisplay key=\"front\" onClick={toggleFlip}>\n            <Image editImage='false' featureImage={featureImage} setFeatureImage={setFeatureImage} />\n            <div className=\"classInfo\">\n              <h2>{title}</h2>\n              <h3>{instructor}</h3>\n              <p className=\"classDescription\">{description}</p>\n            </div>\n            <div>\n              <span className={classType === 'live' ? 'classType live' : 'classType onDemand'}>{classType}</span>\n              <span className=\"classDuration\">{duration} min</span>\n            </div>\n          </ClassCardDisplay>\n  \n          <ClassCardForm key=\"back\">\n            <Image editImage='true' featureImage={featureImage} setFeatureImage={setFeatureImage} />\n            <label>Title: </label>\n            <input \n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={handleChangeTitle}\n              />\n            <br />\n            <label>Instructor:</label>\n            <input\n              type=\"text\"\n              name=\"instructor\"\n              value={instructor}\n              onChange={handleChangeInstructor}\n              />\n            <br />\n            <label>Description:</label>\n            <textarea\n              rows=\"6\"\n              name=\"description\"\n              value={description}\n              onChange={handleChangeDescription}\n            />\n            <br />\n            <label className=\"form__radioLabelOnDemand\">On-Demand: \n              <input\n                type=\"radio\"\n                value=\"on-demand\"\n                onChange={handleChangeClassType}\n                checked={classType === 'on-demand'}\n              />\n            </label>\n            <label className=\"form__radioLabelLive\">Live: \n              <input\n                type=\"radio\"\n                value=\"live\"\n                onChange={handleChangeClassType}\n                checked={classType === 'live'}\n              />\n            </label>\n            <label className=\"form__inputLabelDuration\">Duration:\n              <input\n                type=\"number\"\n                name=\"duration\"\n                value={duration}\n                onChange={handleChangeDuration}\n              />\n            </label>\n            <div className=\"form__buttons\">\n              <button onClick={handleFormSubmit}>Save</button>\n              <button onClick={(e) => deleteClass(e, content.id)}>Delete</button>\n            </div>\n          </ClassCardForm>\n        </ReactCardFlip>\n      </ClassCardWrapper>\n    )\n}\n  \nexport default Card\n\nconst ClassCardWrapper = styled.div`\n  width: 350px;\n  margin: 5px 5px;\n`\nconst ClassCardDisplay = styled.div`\n  min-height: 470px;\n  background-color: #111111;\n  border: solid 1px #cccccc;\n  cursor: pointer;\n  box-shadow: 3px 3px 3px 0px rgba(0,0,0,.05);\n\n  & h2 {\n    display: inline-block;\n    width: 100%;\n    font-weight: 600;\n    font-size: 1.5em;\n    font-weight: 700;\n    padding: 10px 0;\n    margin-top: -50px;\n    background-color: #ffffff;\n  }\n  & h3 {\n    font-weight: 500;\n    font-size: 1.125em;\n    padding: 0px 10px;\n    margin-top: 0px;\n  }\n  & .classInfo {\n    max-width: 85%;\n    margin: 0 auto 20px;\n    background-color: #ffffff;\n  }\n  & .classDescription {\n    font-weight: 400;\n    font-size: .75em;\n    padding: 0 20px;\n    height: 120px;\n    overflow: hidden;\n  }\n  & .classType {\n    float: left;\n    font-weight: 700;\n    text-transform: uppercase;\n    color: #ffffff;\n    padding: 2px 10px;\n  }\n  & .classType.live {\n    background-color: #236d14;\n  }\n  & .classType.onDemand {\n    background-color: #ffffff;\n    border-left: 0px;\n    color: #000000;\n  }\n  & .classDuration {\n    width: 30px;\n    height: 27px;\n    float: right;\n    border-radius: 32px;\n    color: #ffffff;\n    font-weight: 500;\n    font-size: .75em;\n    line-height: 1;\n    margin: 0 5px 0 0;\n  }    \n`\nconst ClassCardForm = styled.div`\n  min-height: 470px;  \n  background-color: #ffffff;\n  border: solid 1px #cccccc;\n  cursor: pointer;\n  box-shadow: 3px 3px 3px 0px rgba(0,0,0,.05);\n\n  & .container__changeImage button {\n    position: fixed;\n    width: 150px;\n    top: 150px;\n    left: 50%;\n    margin-left: -75px;\n  }\n\n  & label {\n    display: inline-block;\n    vertical-align: top;\n    padding: 5px;\n    margin: 2px;\n    font-weight: 500;\n    font-size: .8em;\n    text-align: right;\n    width: 75px;\n  }\n  & textarea  {\n    width: 180px;\n    font-size: .85em;\n    border: 1px solid #dddddd;\n    background-color: #fafafa;\n    padding: 3px;\n    margin: 2px;\n  }\n  & input  {\n    width: 180px;\n    font-size: .85em;\n    border: 1px solid #dddddd;\n    background-color: #fafafa;\n    padding: 3px;\n    margin: 2px;\n  } \n  & input[type=\"radio\"]  {\n    display: inline-block;\n    width: 30px;\n    border: 1px solid #cccccc;\n  }\n  & label.form__radioLabelOnDemand {\n    padding: 0;\n    width: 115px;\n  }\n  & label.form__radioLabelLive {\n    padding: 0;\n    width: 65px;\n  }\n  & label.form__inputLabelDuration{\n    padding: 0;\n    width: 100px;\n    & input {\n      margin: 0px;\n      width: 35px;\n    }\n  }\n  & .form__buttons {\n    padding: 15px 0 10px;\n  }\n`","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ModalProvider } from 'styled-react-modal';\nimport classList from './classes';\nimport NavBar from './NavBar';\nimport Card from './Card';\n\nconst App = () => {\n    const [classes, setClasses] = useState(classList)\n\n    const createClass = () => {\n      const lastItem = classes.reverse().slice(-1).pop();\n      const lastId = lastItem.id + 1;\n      const newClasses = [...classes, {\n        id: lastId,\n        title: \"New Class\",\n        instructor: \"Click on a card to edit it.\",\n        description: \"Add a title, instructor, and description. Choose a picture. Indicate whether the class is Live or On-Demand and the class duration.\",\n        duration: \"0\",\n        featureImage: \"https://via.placeholder.com/500/000000/ffffff/?text=Choose+a+Picture\",\n        classType: \"Type\"\n      }]\n      setClasses(newClasses)\n    }\n\n    const deleteClass = (e, id) => {\n      if (window.confirm('Are you sure you wish to delete this class?\\nClick OK to delete class or Cancel to go back.')) {\n        let index = classes.findIndex(klass => klass.id === id)\n        classes.splice(index, 1)\n        let newClasses = [...classes.reverse()]\n        setClasses(newClasses)\n      } \n      e.preventDefault();\n    }\n\n    return (\n      <Wrapper>\n        <NavBar />\n        <h1>Interactive Cards</h1>\n        <p>Click on a Card to edit it.</p>\n        <button onClick={createClass}>+ New Card</button>\n        <ModalProvider backgroundComponent={SpecialModalBackground}>\n          <CardContainer>\n            {classes.reverse().map(klass => <Card key={klass.id} content={klass} deleteClass={deleteClass} />)}\n          </CardContainer>\n        </ModalProvider>\n      </Wrapper>\n    )\n}\n\nexport default App\n\n\nconst Wrapper = styled.div `\n  padding: 45px 0 0 0;\n  text-align: center;\n`\nconst CardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: top;\n  justify-content: center;\n  margin: 20px;\n`\n\nconst SpecialModalBackground = styled.div`\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 30;\n  background-color: rgba(0,0,0,.75);\n`\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://create-react-app.dev/docs/making-a-progressive-web-app/\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.unregister();\n"],"sourceRoot":""}